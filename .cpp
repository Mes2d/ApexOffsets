uintptr_t client_render_targets = 0x1fdefa0;
uintptr_t ibase_client_dll = 0x19e1830;
uintptr_t iclient_entity_list = 0x1fde7b0;
uintptr_t cprediction = 0x1fde7b8;
uintptr_t iv_model_render = 0x128b080;
uintptr_t vgui_system = 0x1f986e0;
uintptr_t iv_render_view = 0x7519818;
uintptr_t iv_debug_overlay = 0x75b49a0;
uintptr_t iv_model_info_client = 0x7519828;
uintptr_t iv_engine_client = 0x12799d8;
uintptr_t iv_engine_trace = 0x7519830;
uintptr_t inetwork_string_table = 0x7519840;
uintptr_t cnetwork_u64_table = 0x7519848;
uintptr_t cinput = 0x1d94f60;
uintptr_t cengine = 0x1292410;
uintptr_t iswapchain = 0xb911f98;
uintptr_t cl_entitylist = 0x19fbcd8;
uintptr_t local_entity_handle = 0x127d8bc;
uintptr_t local_player = 0x1daca88;
uintptr_t global_vars = 0x135c850;
uintptr_t name_list = 0xb9f7f40;
uintptr_t view_render = 0x1fe00b0;
uintptr_t view_matrix = 0x602581;	
uintptr_t client_state = 0x135cbd0;
uintptr_t sign_on_state = 0x135cc68;
uintptr_t level_name = 0x135cd80;
uintptr_t glow_enable = 0x3c8;
uintptr_t glow_type = 0x2c0;
uintptr_t glow_color = 0x1d0;
constexpr auto m_localOrigin = 0x4; // Vector
constexpr auto m_hGroundEntity = 0x434; // Integer
constexpr auto m_iHealth = 0x438; // Integer
constexpr auto m_localAngles = 0x490; // Vector
constexpr auto m_iMaxHealth = 0x578; // Integer
constexpr auto m_lifeState = 0x798; // Integer
constexpr auto m_fireteamSlotIndex = 0x1c50; // Integer
constexpr auto m_aiSprinting = 0x1dba; // Integer
constexpr auto m_aiNetworkFlags = 0x1ddc; // Integer
constexpr auto m_isHologram = 0x1de0; // Integer
constexpr auto m_title = 0x1de1; // String
constexpr auto m_aiSettingsIndex = 0x1e04; // Integer
constexpr auto m_subclass = 0x1e08; // Integer
constexpr auto m_radius = 0xa60; // Float
constexpr auto m_isEnabled = 0xa64; // Integer
constexpr auto m_networkTableSoundID = 0xa70; // Integer
constexpr auto m_networkedSegmentEndpointWorldSpace = 0xa78; // Vector
constexpr auto m_hasPolylineSegments = 0xa84; // Integer
constexpr auto m_animPlaybackRate = 0x10; // Float
constexpr auto m_animFrozen = 0x14; // Integer
constexpr auto m_animModelIndex = 0x18; // Integer
constexpr auto m_nNewSequenceParity = 0x20; // Integer
constexpr auto m_bClientSideRagdoll = 0x84; // Integer
constexpr auto m_vecForce = 0x88; // Vector
constexpr auto m_flEstIkOffset = 0x94; // Float
constexpr auto m_passDamageToParent = 0x7c4; // Integer
constexpr auto m_animNetworkFlags = 0xa88; // Integer
constexpr auto m_animActive = 0xa8c; // Integer
constexpr auto m_animCollisionEnabled = 0xa8f; // Integer
constexpr auto m_animRelativeToGroundEnabled = 0xa90; // Integer
constexpr auto m_animPlantingEnabled = 0xa91; // Integer
constexpr auto m_animInitialPos = 0xa94; // Vector
constexpr auto m_animInitialVel = 0xaa0; // Vector
constexpr auto m_animInitialRot = 0xaac; // Table
constexpr auto m_animInitialCorrectPos = 0xabc; // Vector
constexpr auto m_animInitialCorrectRot = 0xac8; // Table
constexpr auto m_animEntityToRefOffset = 0xad8; // Vector
constexpr auto m_animEntityToRefRotation = 0xae4; // Table
constexpr auto m_animScriptSequence = 0xafc; // Integer
constexpr auto m_animScriptModel = 0xb00; // Integer
constexpr auto m_animIgnoreParentRot = 0xb04; // Integer
constexpr auto m_animMotionMode = 0xb08; // Integer
constexpr auto m_syncingWithEntity = 0xb84; // Integer
constexpr auto m_predictedAnimEventCount = 0xbd0; // Integer
constexpr auto m_predictedAnimEventTarget = 0xbd4; // Integer
constexpr auto m_predictedAnimEventSequence = 0xbd8; // Integer
constexpr auto m_predictedAnimEventModel = 0xbdc; // Integer
constexpr auto m_nRagdollImpactFXTableId = 0xbf4; // Integer
constexpr auto m_flSkyScaleStartValue = 0xbf8; // Float
constexpr auto m_flSkyScaleEndValue = 0xbfc; // Float
constexpr auto m_sequenceTransitionerLayerCount = 0xdc0; // Integer
constexpr auto m_nSkin = 0xea8; // Integer
constexpr auto m_skinMod = 0xeac; // Integer
constexpr auto m_nBody = 0xeb0; // Integer
constexpr auto m_camoIndex = 0xeb4; // Integer
constexpr auto m_nForceBone = 0xef0; // Integer
constexpr auto m_bSequenceFinished = 0xf54; // Integer
constexpr auto m_lockedAnimDeltaYaw = 0xf58; // Float
constexpr auto m_flModelScale = 0xf60; // Float
constexpr auto m_usable = 0xa90; // Integer
constexpr auto m_vecViewOffsetx = 0x38; // Float
constexpr auto m_vecViewOffsety = 0x3c; // Float
constexpr auto m_vecViewOffsetz = 0x40; // Float
constexpr auto m_cloakEndTime = 0x19c; // Float
constexpr auto m_cloakFadeOutStartTime = 0x1a4; // Float
constexpr auto m_cloakFadeInDuration = 0x1a8; // Float
constexpr auto m_cloakFlickerAmount = 0x1ac; // Float
constexpr auto m_networkedFlags = 0x3ec; // Integer
constexpr auto m_deathVelocity = 0x470; // Vector
constexpr auto m_nameVisibilityFlags = 0x9b8; // Integer
constexpr auto m_lastFiredWeapon = 0x1a28; // Integer
constexpr auto m_sharedEnergyCount = 0x1a30; // Integer
constexpr auto m_sharedEnergyTotal = 0x1a34; // Integer
constexpr auto m_sharedEnergyLockoutThreshold = 0x1a38; // Integer
constexpr auto m_sharedEnergyRegenDelay = 0x1a44; // Float
constexpr auto m_lastCycleSlot = 0x1ac4; // Integer
constexpr auto m_weaponPermission = 0x1acc; // Integer
constexpr auto m_weaponDisabledInScript = 0x1ad4; // Integer
constexpr auto m_weaponDisabledFlags = 0x1af9; // Integer
constexpr auto m_weaponTypeDisabledFlags = 0x1afc; // Integer
constexpr auto m_weaponAmmoRegenDisabled = 0x1b09; // Integer
constexpr auto m_weaponAmmoRegenDisabledRefCount = 0x1b0c; // Integer
constexpr auto m_hudInfo_visibilityTestAlwaysPasses = 0x1b10; // Integer
constexpr auto m_contextAction = 0x1b24; // Integer
constexpr auto m_phaseShiftType = 0x1b50; // Integer
constexpr auto m_targetInfoIconName = 0x1ba4; // String
constexpr auto m_parentAttachmentIndex = 0x24; // Integer
constexpr auto m_fEffects = 0x44; // Integer
constexpr auto m_usableType = 0x48; // Integer
constexpr auto m_cellX = 0x4c; // Integer
constexpr auto m_cellY = 0x50; // Integer
constexpr auto m_clrRender = 0x50; // Integer
constexpr auto m_clIntensity = 0x54; // Integer
constexpr auto m_cellZ = 0x54; // Integer
constexpr auto m_localOrigin = 0x58; // Vector
constexpr auto m_nModelIndex = 0x64; // Integer
constexpr auto m_bossPlayer = 0x124; // Integer
constexpr auto m_shieldHealth = 0x170; // Integer
constexpr auto m_shieldHealthMax = 0x174; // Integer
constexpr auto m_networkedFlags = 0x3ec; // Integer
constexpr auto m_visibilityFlags = 0x440; // Integer
constexpr auto m_iTeamNum = 0x448; // Integer
constexpr auto m_teamMemberIndex = 0x450; // Integer
constexpr auto m_squadID = 0x454; // Integer
constexpr auto m_grade = 0x458; // Integer
constexpr auto m_ignorePredictedTriggerFlags = 0x45c; // Integer
constexpr auto m_passThroughFlags = 0x464; // Integer
constexpr auto m_passThroughThickness = 0x468; // Integer
constexpr auto m_passThroughDirection = 0x46c; // Float
constexpr auto m_bIsSoundCodeControllerValueSet = 0x47c; // Integer
constexpr auto m_flSoundCodeControllerValue = 0x480; // Float
constexpr auto m_localAngles = 0x490; // Vector
constexpr auto m_hOwnerEntity = 0x4a4; // Integer
constexpr auto m_bRenderWithViewModels = 0x4a8; // Integer
constexpr auto m_nRenderFX = 0x4a9; // Integer
constexpr auto m_nRenderMode = 0x4b9; // Integer
constexpr auto m_vecMins = 0x4d0; // Vector
constexpr auto m_vecMaxs = 0x4dc; // Vector
constexpr auto m_usSolidFlags = 0x4e8; // Integer
constexpr auto m_nSolidType = 0x4ec; // Integer
constexpr auto m_triggerBloat = 0x4ed; // Integer
constexpr auto m_collisionDetailLevel = 0x4ee; // Integer
constexpr auto m_nSurroundType = 0x4fc; // Integer
constexpr auto m_vecSpecifiedSurroundingMins = 0x508; // Vector
constexpr auto m_vecSpecifiedSurroundingMaxs = 0x514; // Vector
constexpr auto m_CollisionGroup = 0x540; // Integer
constexpr auto m_contents = 0x544; // Integer
constexpr auto m_collideWithOwner = 0x548; // Integer
constexpr auto m_iSignifierName = 0x580; // String
constexpr auto m_iName = 0x589; // String
constexpr auto m_scriptNameIndex = 0x690; // Integer
constexpr auto m_instanceNameIndex = 0x694; // Integer
constexpr auto m_holdUsePrompt = 0x718; // String
constexpr auto m_pressUsePrompt = 0x720; // String
constexpr auto m_phaseShiftFlags = 0x7b8; // Integer
constexpr auto m_baseTakeDamage = 0x7bc; // Integer
constexpr auto m_invulnerableToDamageCount = 0x7c0; // Integer
constexpr auto m_attachmentLerpStartOrigin = 0x83c; // Vector
constexpr auto m_attachmentLerpStartAngles = 0x848; // Vector
constexpr auto m_parentAttachmentModel = 0x860; // Integer
constexpr auto m_fadeDist = 0x86c; // Float
constexpr auto m_dissolveEffectEntityHandle = 0x918; // Integer
constexpr auto m_usablePriority = 0x928; // Integer
constexpr auto m_usableDistanceOverride = 0x92c; // Float
constexpr auto m_usableFOV = 0x930; // Float
constexpr auto m_usePromptSize = 0x934; // Float
constexpr auto m_firstChildEntityLink = 0xa40; // Integer
constexpr auto m_firstParentEntityLink = 0xa44; // Integer
constexpr auto m_realmsBitMask = 0xa48; // Integer64
constexpr auto m_targetInfoPingValue = 0x1be4; // Integer
constexpr auto m_parentAttachmentType = 0x20; // Integer
constexpr auto m_parentAttachmentIndex = 0x24; // Integer
constexpr auto m_baseTakeDamage = 0x7bc; // Integer
constexpr auto m_invulnerableToDamageCount = 0x7c0; // Integer
constexpr auto m_parentAttachmentHitbox = 0x85c; // Integer
constexpr auto m_parentAttachmentModel = 0x860; // Integer
constexpr auto m_doesExplode = 0x2e21; // Integer
constexpr auto m_DmgRadius = 0x2e24; // Float
constexpr auto m_grenadeStatusFlags = 0x2e48; // Integer
constexpr auto m_ziplineGrenadeExpectedEndPosition = 0x2eb8; // Vector
constexpr auto m_vecFinalDest = 0xa74; // Vector
constexpr auto m_movementType = 0xa80; // Integer
constexpr auto m_spawnflags = 0x94; // Integer
constexpr auto m_bClientSidePredicted = 0xa90; // Integer
constexpr auto m_animStartCycle = 0xc; // Float
constexpr auto m_animPlaybackRate = 0x10; // Float
constexpr auto m_animFrozen = 0x14; // Integer
constexpr auto m_animModelIndex = 0x18; // Integer
constexpr auto m_animSequence = 0x1c; // Integer
constexpr auto m_nNewSequenceParity = 0x20; // Integer
constexpr auto m_fEffects = 0x44; // Integer
constexpr auto m_clrRender = 0x50; // Integer
constexpr auto m_nModelIndex = 0x64; // Integer
constexpr auto m_nRenderMode = 0x4b9; // Integer
constexpr auto m_nBody = 0xeb0; // Integer
constexpr auto m_nResetEventsParity = 0xebc; // Integer
constexpr auto m_bSequenceFinished = 0xf54; // Integer
constexpr auto m_flModelScale = 0xf60; // Float
constexpr auto m_viewModelOwner = 0x1a7c; // Integer
constexpr auto m_projectileIsVisible = 0x1a80; // Integer
constexpr auto m_bBlockEventLayer = 0x1e60; // Integer
constexpr auto m_isAdsTransition = 0x1e61; // Integer
constexpr auto m_hWeapon = 0x1e64; // Integer
constexpr auto m_cellX = 0x4c; // Integer
constexpr auto m_cellY = 0x50; // Integer
constexpr auto m_cellZ = 0x54; // Integer
constexpr auto m_localOrigin = 0x58; // Vector
constexpr auto m_nModelIndex = 0x64; // Integer
constexpr auto m_networkedFlags = 0x3ec; // Integer
constexpr auto m_localAngles = 0x490; // Vector
constexpr auto m_hOwnerEntity = 0x4a4; // Integer
constexpr auto m_vecMins = 0x4d0; // Vector
constexpr auto m_vecMaxs = 0x4dc; // Vector
constexpr auto m_usSolidFlags = 0x4e8; // Integer
constexpr auto m_nSolidType = 0x4ec; // Integer
constexpr auto m_triggerBloat = 0x4ed; // Integer
constexpr auto m_collisionDetailLevel = 0x4ee; // Integer
constexpr auto m_nSurroundType = 0x4fc; // Integer
constexpr auto m_vecSpecifiedSurroundingMins = 0x508; // Vector
constexpr auto m_vecSpecifiedSurroundingMaxs = 0x514; // Vector
constexpr auto m_CollisionGroup = 0x540; // Integer
constexpr auto m_modelIndex = 0xa60; // Integer
constexpr auto m_boneIndex = 0xa64; // Integer
constexpr auto m_nNumWide = 0xa68; // Integer
constexpr auto m_nNumHigh = 0xa6c; // Integer
constexpr auto m_flPanelWidth = 0xa70; // Float
constexpr auto m_flPanelHeight = 0xa74; // Float
constexpr auto m_vNormal = 0xa78; // Vector
constexpr auto m_vUp = 0xa84; // Vector
constexpr auto m_vCorner = 0xa9c; // Vector
constexpr auto m_bIsBroken = 0xaa8; // Integer
constexpr auto m_nSurfaceType = 0xaac; // Integer
constexpr auto m_passives = 0x0; // Array
			constexpr auto m_vecAbsOrigin = 0x4; // Vector
			constexpr auto m_fFlags = 0x98; // Integer
			constexpr auto m_hGroundEntity = 0x434; // Integer
			constexpr auto m_iHealth = 0x438; // Integer
			constexpr auto m_flMaxspeed = 0x43c; // Float
			constexpr auto m_iMaxHealth = 0x578; // Integer
			constexpr auto m_lifeState = 0x798; // Integer
			constexpr auto m_decalIndex = 0xeb8; // Integer
			constexpr auto m_titanSoul = 0x1b48; // Integer
			constexpr auto m_bZooming = 0x1c51; // Integer
			constexpr auto m_zoomBaseFrac = 0x1c58; // Float
			constexpr auto m_flHullHeight = 0x210c; // Float
			constexpr auto m_angEyeAnglesx = 0x2110; // Float
			constexpr auto m_angEyeAnglesy = 0x2114; // Float
			constexpr auto m_traversalAnimProgress = 0x211c; // Float
			constexpr auto m_sprintTiltFrac = 0x2120; // Float
			constexpr auto m_ammoPoolCapacity = 0x259c; // Integer
			constexpr auto m_hasBadReputation = 0x25a0; // Integer
			constexpr auto m_hardware = 0x25a8; // Integer
			constexpr auto m_unspoofedHardware = 0x25a9; // Integer
			constexpr auto m_platformUserId = 0x25b0; // Integer64
			constexpr auto m_unSpoofedPlatformUserId = 0x25b8; // Integer64
			constexpr auto m_EadpUserId = 0x25c0; // Integer64
			constexpr auto m_crossPlayChat = 0x25c8; // Integer
			constexpr auto m_crossPlayChatFriends = 0x25c9; // Integer
			constexpr auto m_classModsActive = 0x25d0; // Integer64
			constexpr auto m_passives0 = 0x2708; // Integer64
			constexpr auto m_bleedoutState = 0x2728; // Integer
			constexpr auto m_bleedoutStartTime = 0x272c; // Float
			constexpr auto m_damageComboStartHealth = 0x28d8; // Integer
			constexpr auto m_gestureAutoKillBitfield = 0x299c; // Integer
			constexpr auto m_autoSprintForced = 0x29e0; // Integer
			constexpr auto m_fIsSprinting = 0x29e4; // Integer
			constexpr auto m_playerSettingForStickySprintForward = 0x29f2; // Integer
			constexpr auto m_playerVehicleCount = 0x2a28; // Integer
			constexpr auto m_playerVehicleDriven = 0x2a2c; // Integer
			constexpr auto m_duckState = 0x2a34; // Integer
			constexpr auto m_leanState = 0x2a38; // Integer
			constexpr auto m_canStand = 0x2a3d; // Integer
			constexpr auto m_StandHullMin = 0x2a40; // Vector
			constexpr auto m_StandHullMax = 0x2a4c; // Vector
			constexpr auto m_DuckHullMin = 0x2a58; // Vector
			constexpr auto m_DuckHullMax = 0x2a64; // Vector
			constexpr auto m_entitySyncingWithMe = 0x2a70; // Integer
			constexpr auto m_upDir = 0x2a74; // Vector
			constexpr auto m_traversalState = 0x2afc; // Integer
			constexpr auto m_traversalType = 0x2b00; // Integer
			constexpr auto m_traversalForwardDir = 0x2b2c; // Vector
			constexpr auto m_traversalRefPos = 0x2b38; // Vector
			constexpr auto m_traversalYawDelta = 0x2b64; // Float
			constexpr auto m_traversalYawPoseParameter = 0x2b68; // Integer
			constexpr auto m_wallClimbSetUp = 0x2b80; // Integer
			constexpr auto m_wallHanging = 0x2b81; // Integer
			constexpr auto m_grapplePoints = 0x2c70; // Array
			constexpr auto m_grappleVel = 0x2c78; // Vector
			constexpr auto m_grapplePoints0 = 0x2c84; // Vector
			constexpr auto m_grapplePointCount = 0x2cb4; // Integer
			constexpr auto m_grappleAttached = 0x2cb8; // Integer
			constexpr auto m_grapplePulling = 0x2cb9; // Integer
			constexpr auto m_grappleSwinging = 0x2cba; // Integer
			constexpr auto m_grappleRetracting = 0x2cbb; // Integer
			constexpr auto m_grappleForcedRetracting = 0x2cbc; // Integer
			constexpr auto m_grappleGracePeriodFinished = 0x2cbd; // Integer
			constexpr auto m_grappleUsedPower = 0x2cc0; // Float
			constexpr auto m_grappleMeleeTarget = 0x2cd4; // Integer
			constexpr auto m_grappleAutoAimTarget = 0x2cd8; // Integer
			constexpr auto m_grappleHasGoodVelocity = 0x2cdc; // Integer
			constexpr auto m_grappleSwingDetachLowSpeed = 0x2ce4; // Float
			constexpr auto m_grappleActive = 0x2d00; // Integer
			constexpr auto m_turret = 0x2d48; // Integer
			constexpr auto m_activeZipline = 0x2eac; // Integer
			constexpr auto m_ziplineValid3pWeaponLayerAnim = 0x2eb8; // Integer
			constexpr auto m_ziplineState = 0x2ebc; // Integer
			constexpr auto m_ziplineGrenadeBeginStationEntity = 0x2f54; // Integer
			constexpr auto m_ziplineGrenadeBeginStationAttachmentIndex = 0x2f58; // Integer
			constexpr auto m_isPerformingBoostAction = 0x2f99; // Integer
			constexpr auto m_lastJumpPadTouched = 0x3090; // Integer
			constexpr auto m_launchCount = 0x3098; // Integer
			constexpr auto m_useCredit = 0x3200; // Integer
			constexpr auto m_playerFlags = 0x3210; // Integer
			constexpr auto m_hasMic = 0x3218; // Integer
			constexpr auto m_inPartyChat = 0x3219; // Integer
			constexpr auto m_communicationsAutoBlocked = 0x321a; // Integer
			constexpr auto m_playerMoveSpeedScale = 0x321c; // Float
			constexpr auto m_bShouldDrawPlayerWhileUsingViewEntity = 0x3458; // Integer
			constexpr auto m_iSpawnParity = 0x34c4; // Integer
			constexpr auto m_grappleHook = 0x3668; // Integer
			constexpr auto m_petTitan = 0x366c; // Integer
			constexpr auto m_xp = 0x3694; // Integer
			constexpr auto m_skill_mu = 0x369c; // Float
			constexpr auto m_bHasMatchAdminRole = 0x36a0; // Integer
			constexpr auto m_ubEFNoInterpParity = 0x3fc8; // Integer
			constexpr auto m_hColorCorrectionCtrl = 0x3fcc; // Integer
			constexpr auto m_title = 0x3ff0; // String
			constexpr auto m_nPlayerCond = 0x4328; // Integer
			constexpr auto m_pilotClassIndex = 0x4374; // Integer
			constexpr auto m_pilotClassActivityModifier = 0x4378; // Integer
			constexpr auto m_playerScriptNetDataGlobal = 0x4600; // Integer
			constexpr auto m_helmetType = 0x4608; // Integer
			constexpr auto m_armorType = 0x460c; // Integer
			constexpr auto m_controllerModeActive = 0x4614; // Integer
			constexpr auto m_skydiveForwardPoseValueTarget = 0x4630; // Float
			constexpr auto m_skydiveSidePoseValueTarget = 0x463c; // Float
			constexpr auto m_skydiveState = 0x4664; // Integer
			constexpr auto m_skydiveDiveAngle = 0x467c; // Float
			constexpr auto m_skydiveIsDiving = 0x4680; // Integer
			constexpr auto m_skydiveSpeed = 0x4684; // Float
			constexpr auto m_skydiveStrafeAngle = 0x4688; // Float
			constexpr auto m_skydivePlayerPitch = 0x469c; // Float
			constexpr auto m_skydivePlayerYaw = 0x46a0; // Float
			constexpr auto m_skydiveFromSkywardLaunch = 0x46dd; // Integer
			constexpr auto m_skywardLaunchState = 0x46e0; // Integer
			constexpr auto m_skywardLaunchSlowStartTime = 0x46f4; // Float
			constexpr auto m_skywardLaunchSlowEndTime = 0x46f8; // Float
			constexpr auto m_skywardLaunchFastEndTime = 0x46fc; // Float
			constexpr auto m_skywardLaunchEndTime = 0x4704; // Float
			constexpr auto m_skywardLaunchSlowSpeed = 0x470c; // Float
			constexpr auto m_skywardLaunchFastSpeed = 0x4710; // Float
			constexpr auto m_skywardOffset = 0x4714; // Vector
			constexpr auto m_skywardLaunchInterrupted = 0x4724; // Integer
			constexpr auto m_skywardLaunchFollowing = 0x4725; // Integer
			constexpr auto m_armoredLeapAirPos = 0x472c; // Vector
			constexpr auto m_armoredLeapEndPos = 0x4738; // Vector
			constexpr auto m_armoredLeapType = 0x4744; // Integer
			constexpr auto m_armoredLeapPhase = 0x4748; // Integer
			constexpr auto m_dragReviveState = 0x47b8; // Integer
			constexpr auto m_dragReviveOutroStartTime = 0x47bc; // Float
			constexpr auto m_reviveTarget = 0x47c0; // Integer
			constexpr auto m_cloakEndTime = 0x19c; // Float
			constexpr auto m_cloakFadeOutStartTime = 0x1a4; // Float
			constexpr auto m_cloakFadeInDuration = 0x1a8; // Float
			constexpr auto m_cloakFlickerAmount = 0x1ac; // Float
			constexpr auto m_iHealth = 0x438; // Integer
			constexpr auto m_iMaxHealth = 0x578; // Integer
			constexpr auto m_nameVisibilityFlags = 0x9b8; // Integer
			constexpr auto m_currentState = 0x16b0; // Integer
			constexpr auto m_decoyFlags = 0x16b4; // Integer
			constexpr auto m_currentClass = 0x16c0; // Integer64
			constexpr auto m_classModsActive = 0x16c8; // Integer64
			constexpr auto m_decoyVelocity = 0x16d0; // Vector
			constexpr auto m_customInt = 0xa64; // Integer
			constexpr auto m_taskStringA = 0xc3c; // String
			constexpr auto m_taskStringB = 0xc7c; // String
			constexpr auto m_taskStringC = 0xcbc; // String
			constexpr auto m_taskStringD = 0xcfc; // String
			constexpr auto m_taskStringE = 0xd3c; // String
			constexpr auto m_taskStringF = 0xd7c; // String
			constexpr auto m_taskStringG = 0xdbc; // String
			constexpr auto m_taskStringH = 0xdfc; // String
			constexpr auto m_taskStringI = 0xe3c; // String
			constexpr auto m_taskStringJ = 0xe7c; // String
			constexpr auto m_taskStringK = 0xebc; // String
			constexpr auto m_taskStringL = 0xefc; // String
			constexpr auto m_taskStringM = 0xf3c; // String
			constexpr auto m_vehiclePlayers = 0x0; // Array
			constexpr auto m_vecViewOffsetx = 0x38; // Float
			constexpr auto m_vecViewOffsety = 0x3c; // Float
			constexpr auto m_vecViewOffsetz = 0x40; // Float
			constexpr auto m_iHealth = 0x438; // Integer
			constexpr auto m_localAngles = 0x490; // Vector
			constexpr auto m_iMaxHealth = 0x578; // Integer
			constexpr auto m_vehicleDriver = 0x1a24; // Integer
			constexpr auto m_vehiclePlayers0 = 0x1a34; // Integer
			constexpr auto m_vehiclePlayerCount = 0x1a44; // Integer
			constexpr auto m_vehicleActivated = 0x1a48; // Integer
			constexpr auto m_blockDuckInput = 0x1a49; // Integer
			constexpr auto m_vehicleFlags = 0x1a4c; // Integer
			constexpr auto m_vehicleType = 0x1a50; // Integer
			constexpr auto m_vehicleLaunchTime = 0x1a58; // Float
			constexpr auto m_cameraVehicleMaxDist = 0x1a60; // Float
			constexpr auto m_cameraVehicleMaxVertDist = 0x1a64; // Float
			constexpr auto m_vehicleVelocity = 0x1a68; // Vector
			constexpr auto m_vehicleGroundEntity = 0x1a74; // Integer
			constexpr auto m_vehicleGroundNormal = 0x1a78; // Vector
			constexpr auto m_hoverVehicleIsOnGround = 0x1aa4; // Integer
			constexpr auto m_hoverVehicleIsParked = 0x1b8d; // Integer
			constexpr auto m_hoverVehicleIsMarkedAsDrivingForward = 0x1b8e; // Integer
			constexpr auto m_hoverVehicleStunTimeEnd = 0x1b90; // Float
			constexpr auto m_hoverVehicleThrottle = 0x1b94; // Float
			constexpr auto m_hoverVehicleBanking = 0x1b9c; // Float
			constexpr auto m_hoverVehicleFrictionLastTime = 0x1ba0; // Float
			constexpr auto m_hoverVehicleFrictionSurfPropOther = 0x1ba4; // Integer
			constexpr auto m_hoverVehicleFrictionNormal = 0x1ba8; // Vector
			constexpr auto m_hoverVehicleFrictionPos = 0x1bb4; // Vector
			constexpr auto m_overrideVehicleAngles = 0x1cdc; // Vector
			constexpr auto m_overrideVehicleAnglesUntilTick = 0x1ce8; // Integer
			constexpr auto m_pushingEnt = 0x1d10; // Integer
			constexpr auto m_materialDualColorMask = 0x1da4; // Intege
			constexpr auto m_parentAttachmentIndex = 0x24; // Integer
			constexpr auto m_cellX = 0x4c; // Integer
			constexpr auto m_cellY = 0x50; // Integer
			constexpr auto m_cellZ = 0x54; // Integer
			constexpr auto m_localOrigin = 0x58; // Vector
			constexpr auto m_networkedFlags = 0x3ec; // Integer
			constexpr auto m_visibilityFlags = 0x440; // Integer
			constexpr auto m_iTeamNum = 0x448; // Integer
			constexpr auto m_teamMemberIndex = 0x450; // Integer
			constexpr auto m_hOwnerEntity = 0x4a4; // Integer
			constexpr auto m_iSignifierName = 0x580; // String
			constexpr auto m_parentAttachmentModel = 0x860; // Integer
			constexpr auto m_realmsBitMask = 0xa48; // Integer64
			constexpr auto m_waypointType = 0xa60; // Integer
			constexpr auto m_waypointBitfield = 0xa64; // Integer
			constexpr auto m_objectivePackedInt = 0xb48; // Integer
			constexpr auto m_waypointGroupName = 0xb4c; // String
			constexpr auto m_waypointGroupFlags = 0xb6c; // Integer
			constexpr auto m_waypointCustomType = 0xb70; // String
			constexpr auto m_waypointStringA = 0xb90; // String
			constexpr auto m_waypointStringB = 0xbd0; // String
			constexpr auto m_waypointAssetA = 0xc18; // String
			constexpr auto m_waypointAssetB = 0xc98; // String
			constexpr auto m_FOV = 0xac0; // Float
			constexpr auto m_bFogEnable = 0xae8; // Integer
			constexpr auto m_bActive = 0xae9; // Integer
			constexpr auto m_bEnabled = 0xa60; // Integer
			constexpr auto m_flMagnitude = 0xa64; // Float
			constexpr auto m_flRadius = 0xa68; // Float
			constexpr auto m_flInnerRadius = 0xa6c; // Float
			constexpr auto m_flConeOfInfluence = 0xa70; // Float
			constexpr auto m_bMaster = 0xa78; // Integer
			constexpr auto m_cellX = 0x4c; // Integer
			constexpr auto m_cellY = 0x50; // Integer
			constexpr auto m_cellZ = 0x54; // Integer
			constexpr auto m_localOrigin = 0x58; // Vector
			constexpr auto m_nModelIndex = 0x64; // Integer
			constexpr auto m_networkedFlags = 0x3ec; // Integer
			constexpr auto m_iTeamNum = 0x448; // Integer
			constexpr auto m_vecVelocity = 0x484; // Vector
			constexpr auto m_localAngles = 0x490; // Vector
			constexpr auto m_hOwnerEntity = 0x4a4; // Integer
			constexpr auto m_CollisionGroup = 0x540; // Integer
			constexpr auto m_PredictableID = 0x7cc; // Integer
			constexpr auto m_realmsBitMask = 0xa48; // Integer64
			constexpr auto m_weaponDataIsSet = 0x16b0; // Integer
			constexpr auto m_forceAdjustToGunBarrelDisabled = 0x16b1; // Integer
			constexpr auto m_weaponClassIndex = 0x16b4; // Integer
			constexpr auto m_destructionDistance = 0x16b8; // Float
			constexpr auto m_passThroughDepthTotal = 0x16bc; // Integer
			constexpr auto m_modBitfield = 0x16c0; // Integer
			constexpr auto m_overrideMods = 0x16c4; // Integer
			constexpr auto m_projectileTrailIndex = 0x16c8; // Integer
			constexpr auto m_impactEffectTable = 0x16cc; // Integer
			constexpr auto m_reducedEffects = 0x16d0; // Integer
			constexpr auto m_weaponSource = 0x16d8; // Integer
			constexpr auto m_passThroughModCount = 0x16dc; // Integer
			constexpr auto m_launchOrigin = 0x16f4; // Vector
			constexpr auto m_parentAttachmentType = 0x20; // Integer
			constexpr auto m_parentAttachmentIndex = 0x24; // Integer
			constexpr auto m_fEffects = 0x44; // Integer
			constexpr auto m_usableType = 0x48; // Integer
			constexpr auto m_cellX = 0x4c; // Integer
			constexpr auto m_cellY = 0x50; // Integer
			constexpr auto m_cellZ = 0x54; // Integer
			constexpr auto m_localOrigin = 0x58; // Vector
			constexpr auto m_nModelIndex = 0x64; // Integer
			constexpr auto m_networkedFlags = 0x3ec; // Integer
			constexpr auto m_visibilityFlags = 0x440; // Integer
			constexpr auto m_localAngles = 0x490; // Vector
			constexpr auto m_vecMins = 0x4d0; // Vector
			constexpr auto m_vecMaxs = 0x4dc; // Vector
			constexpr auto m_usSolidFlags = 0x4e8; // Integer
			constexpr auto m_nSolidType = 0x4ec; // Integer
			constexpr auto m_triggerBloat = 0x4ed; // Integer
			constexpr auto m_collisionDetailLevel = 0x4ee; // Integer
			constexpr auto m_nSurroundType = 0x4fc; // Integer
			constexpr auto m_vecSpecifiedSurroundingMins = 0x508; // Vector
			constexpr auto m_vecSpecifiedSurroundingMaxs = 0x514; // Vector
			constexpr auto m_CollisionGroup = 0x540; // Integer
			constexpr auto m_iSignifierName = 0x580; // String
			constexpr auto m_parentAttachmentModel = 0x860; // Integer
			constexpr auto m_usablePriority = 0x928; // Integer
			constexpr auto m_usableDistanceOverride = 0x92c; // Float
			constexpr auto m_usableFOV = 0x930; // Float
			constexpr auto m_usePromptSize = 0x934; // Float
			constexpr auto m_realmsBitMask = 0xa48; // Integer64
			constexpr auto m_nSkin = 0xea8; // Integer
			constexpr auto m_skinMod = 0xeac; // Integer
			constexpr auto m_nBody = 0xeb0; // Integer
			constexpr auto m_camoIndex = 0xeb4; // Integer
			constexpr auto m_ammoInClip = 0x16b4; // Integer
			constexpr auto m_customScriptInt = 0x16b8; // Integer
			constexpr auto m_survivalProperty = 0x16bc; // Integer
			constexpr auto m_weaponNameIndex = 0x16c4; // Integer
			constexpr auto m_modBitField = 0x16c8; // Integer
			constexpr auto m_survivalPropFadeDist = 0x16d0; // Float
			constexpr auto m_localOrigin = 0x4; // Vector
			constexpr auto m_parentAttachmentType = 0x20; // Integer
			constexpr auto m_parentAttachmentIndex = 0x24; // Integer
			constexpr auto m_clrRender = 0x50; // Integer
			constexpr auto m_visibilityFlags = 0x440; // Integer
			constexpr auto m_hOwnerEntity = 0x4a4; // Integer
			constexpr auto m_nRenderMode = 0x4b9; // Integer
			constexpr auto m_parentAttachmentHitbox = 0x85c; // Integer
			constexpr auto m_parentAttachmentModel = 0x860; // Integer
			constexpr auto m_fadeDist = 0x86c; // Float
			constexpr auto m_ropeZiplineAutoDetachDistance = 0xa60; // Float
			constexpr auto m_ziplineSagEnable = 0xa64; // Integer
			constexpr auto m_ziplineSagHeight = 0xa68; // Float
			constexpr auto m_ziplineMoveSpeedScale = 0xb60; // Float
			constexpr auto m_startOffset = 0xb64; // Vector
			constexpr auto m_endOffset = 0xb70; // Vector
			constexpr auto m_wiggleMaxLen = 0xb84; // Float
			constexpr auto m_wiggleMagnitude = 0xb88; // Float
			constexpr auto m_wiggleSpeed = 0xb8c; // Float
			constexpr auto m_flScrollSpeed = 0xbc4; // Float
			constexpr auto m_RopeFlags = 0xbc8; // Integer
			constexpr auto m_iRopeMaterialModelIndex = 0xbcc; // Integer
			constexpr auto m_nSegments = 0xe50; // Integer
			constexpr auto m_hStartPoint = 0xe54; // Integer
			constexpr auto m_hEndPoint = 0xe58; // Integer
			constexpr auto m_hPrevPoint = 0xe5c; // Integer
			constexpr auto m_iStartAttachment = 0xe60; // Integer
			constexpr auto m_iEndAttachment = 0xe62; // Integer
			constexpr auto m_subdivStackCount = 0xe8c; // Integer
			constexpr auto m_subdivSliceCount = 0xe90; // Integer
			constexpr auto m_ropeLength = 0xe94; // Integer
			constexpr auto m_constraintIterations = 0xe9c; // Integer
			constexpr auto m_ropeDampening = 0xea0; // Float
			constexpr auto m_Slack = 0xea4; // Integer
			constexpr auto m_TextureScale = 0xea8; // Float
			constexpr auto m_TextureScale_ = 0xea8; // Float
			constexpr auto m_fLockedPoints = 0xeac; // Integer
			constexpr auto m_lockDirectionCutoffLength = 0xeb0; // Integer
			constexpr auto m_lockDirectionStrength = 0xeb4; // Float
			constexpr auto m_nChangeCount = 0xeb8; // Integer
			constexpr auto m_Width = 0xebc; // Float
			constexpr auto m_bConstrainBetweenEndpoints = 0xf50; // Integer
			constexpr auto m_pullOuterRadius = 0xaa0; // Float
			constexpr auto m_pullInnerRadius = 0xaa4; // Float
			constexpr auto m_reduceSpeedOuterRadius = 0xaa8; // Float
			constexpr auto m_reduceSpeedInnerRadius = 0xaac; // Float
			constexpr auto m_pullAccel = 0xab0; // Float
			constexpr auto m_pullSpeed = 0xab4; // Float
			constexpr auto m_constantPullStregnth = 0xab8; // Integer
